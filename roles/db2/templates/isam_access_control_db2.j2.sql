-- Start "/home/webseal/20171201-2325/app-core/modules/files/hvdb.sql"
-- Start "/home/webseal/20171201-2325/app-core/modules/files/common.sql"
-- --------------- Begin Copyright -----------------------------------------
--
--  IBM Confidential
--  Object Code Only Source Materials
--  
--  (c) Copyright International Business Machines Corp. 2016
--  The source code for this program is not published or otherwise divested
--  of its trade secrets, irrespective of what has been deposited with the
--  U.S. Copyright Office.
--
-- --------------- End Copyright -------------------------------------------













-- ------------------
-- Schema: DB2
-- Build: OnPremise
-- ------------------



-- End "/home/webseal/20171201-2325/app-core/modules/files/common.sql"

-- Replace the following parameters throughout the script with the corresponding values
--      {{database.instance}} - the name of the database instance
--      {{database.user}} - the username for the DB2 user
--      {{database.password}} - the password for the user specified for {{database.user}}
  
ATTACH TO {{database.instance}};
CREATE DATABASE HVDB ALIAS HVDB using codeset UTF-8 territory us COLLATE USING UCA400_NO PAGESIZE 16384 WITH "HVDB Tables";
CONNECT TO HVDB USER {{database.user}} USING {{database.password}};


-- Start "/home/webseal/20171201-2325/app-core/modules/files/isam_access_control_generic_update_201601010.sql"
CREATE TABLE HVDB_SCHEMA_UPDATES (
    DSU_INSTALL_DATE  TIMESTAMP NOT NULL,
    DSU_VERSION       INTEGER NOT NULL,
    DSU_FILE          VARCHAR(256) NOT NULL
);
COMMIT;
INSERT INTO HVDB_SCHEMA_UPDATES VALUES(CURRENT_TIMESTAMP,201712029,'Install');
COMMIT;
-- End "/home/webseal/20171201-2325/app-core/modules/files/isam_access_control_generic_update_201601010.sql"
-- Start "/home/webseal/20171201-2325/app-core/modules/files/isam_access_control_generic_update_201606290.sql"
CREATE TABLE SCIM_EAS_EXT_USERS (
	  EXT_UID VARCHAR(64) NOT NULL,
	  USER_SHORTNAME VARCHAR(64) NOT NULL,
	  CFGID INTEGER NOT NULL,
	   CONSTRAINT EAS_EXT_UID_UNIQE  UNIQUE (EXT_UID),
	  CONSTRAINT SCIM_EAS_EXT_USER_PK PRIMARY KEY (EXT_UID, USER_SHORTNAME)
);

CREATE TABLE SCIM_EAS_EXT_METHODS (
	  EXT_MID VARCHAR(64) NOT NULL,
	  EXT_UID VARCHAR(64) NOT NULL,
	  SCIM_SCHEMA VARCHAR(256) NOT NULL,
	  CONSTRAINT SCIM_EAS_EXT_METH_PK PRIMARY KEY (EXT_MID),
	  FOREIGN KEY (EXT_UID) REFERENCES SCIM_EAS_EXT_USERS(EXT_UID) ON DELETE CASCADE
);

COMMIT;
-- End "/home/webseal/20171201-2325/app-core/modules/files/isam_access_control_generic_update_201606290.sql"
-- Start "/tmp/mountrootfs18009.wd6Dxa/opt/ibm/generic/defs/hvdb/rba-hvdb.sql"


-- Start "/tmp/mountrootfs18009.wd6Dxa/opt/ibm/generic/defs/hvdb/rba_hvdb_schema.sql"

CREATE TABLE RBA_DEVICE (
  DEVICE_ID       CHARACTER(16) FOR BIT DATA NOT NULL,
  DEVICE_NAME     VARCHAR(200) NOT NULL,
  IS_ENABLED      SMALLINT  DEFAULT 0,
  LAST_USED_TIME  TIMESTAMP    NOT NULL WITH DEFAULT,
  TENANT_ID      VARCHAR(200),

  CONSTRAINT D_PK PRIMARY KEY (DEVICE_ID)
);

CREATE INDEX DEV_LAST_USED_TIME ON RBA_DEVICE(LAST_USED_TIME);

GRANT SELECT, INSERT, UPDATE, DELETE ON RBA_DEVICE TO USER {{database.user}};

CREATE TABLE RBA_DEVICE_FINGERPRINT (
  DEVICE_ID  CHARACTER(16) FOR BIT DATA         NOT NULL,
  ATTR_ID    BIGINT        NOT NULL,
  VALUE      VARCHAR(2000) NOT NULL,
  TENANT_ID  VARCHAR(200),

  CONSTRAINT DF_PK  PRIMARY KEY (DEVICE_ID, ATTR_ID),
  CONSTRAINT DF_FK2 FOREIGN KEY (DEVICE_ID) REFERENCES RBA_DEVICE(DEVICE_ID) ON DELETE CASCADE
);


GRANT SELECT, INSERT, UPDATE, DELETE ON RBA_DEVICE_FINGERPRINT TO USER {{database.user}};

CREATE TABLE RBA_USER_DEVICE (
  USER_ID    VARCHAR(200) NOT NULL,
  DEVICE_ID  CHARACTER(16) FOR BIT DATA        NOT NULL,
  TENANT_ID  VARCHAR(200),

  CONSTRAINT UD_PK PRIMARY KEY (USER_ID, DEVICE_ID),
  CONSTRAINT UD_FK FOREIGN KEY (DEVICE_ID) REFERENCES RBA_DEVICE(DEVICE_ID) ON DELETE CASCADE
);

CREATE INDEX UD_DEVICE_ID ON RBA_USER_DEVICE(DEVICE_ID);

GRANT SELECT, INSERT, UPDATE, DELETE ON RBA_USER_DEVICE TO USER {{database.user}};

CREATE TABLE RBA_USER_ATTR_SESSION (
 REC_TIME    TIMESTAMP    NOT NULL WITH DEFAULT,
 USER_UUID   VARCHAR(200) NOT NULL,   
 SESSION_ID  CHARACTER(16) FOR BIT DATA        NOT NULL,
 TENANT_ID   VARCHAR(200),

 CONSTRAINT UAS_PK PRIMARY KEY (SESSION_ID),
 CONSTRAINT UAS_UK UNIQUE  (USER_UUID)
);

CREATE INDEX UAS_REC_TIME ON RBA_USER_ATTR_SESSION(REC_TIME);

GRANT SELECT, INSERT, UPDATE, DELETE ON RBA_USER_ATTR_SESSION TO USER {{database.user}};

CREATE TABLE RBA_USER_ATTR_SESSION_DATA (
 REC_TIME    TIMESTAMP     NOT NULL WITH DEFAULT,
 SESSION_ID  CHARACTER(16) FOR BIT DATA         NOT NULL,
 ATTR_ID     BIGINT        NOT NULL,
 SOURCE      VARCHAR(400),  
 IS_TRUSTED  SMALLINT DEFAULT 0,
 VALUE       VARCHAR(2000) NOT NULL,

 CONSTRAINT UASD_PK PRIMARY KEY (SESSION_ID, ATTR_ID),
 CONSTRAINT UASD_FK1 FOREIGN KEY (SESSION_ID) REFERENCES RBA_USER_ATTR_SESSION (SESSION_ID) ON DELETE CASCADE
);


GRANT SELECT, INSERT, UPDATE, DELETE ON RBA_USER_ATTR_SESSION_DATA TO USER {{database.user}};

CREATE INDEX UASD_REC_TIME ON RBA_USER_ATTR_SESSION_DATA(REC_TIME);

CREATE TABLE RBA_USER_USAGE_DATA (
  SESSION_ID  CHARACTER(16) FOR BIT DATA         NOT NULL,
  REC_TIME    TIMESTAMP     NOT NULL WITH DEFAULT,
  USER_ID     VARCHAR(200)  NOT NULL,
  ATTR_ID     BIGINT        NOT NULL,
  VALUE       VARCHAR(2000) NOT NULL,
  TENANT_ID   VARCHAR(200),

  CONSTRAINT UUD_PK PRIMARY KEY (SESSION_ID,REC_TIME, USER_ID,ATTR_ID)
);

CREATE INDEX UUD_USER_ID ON RBA_USER_USAGE_DATA(USER_ID);

GRANT SELECT, INSERT, UPDATE, DELETE ON RBA_USER_USAGE_DATA TO USER {{database.user}};

CREATE TABLE RBA_RTE_DB_MAINTENANCE_META (
  DATE_REMOVED  TIMESTAMP   NOT NULL,
  DATA_REMOVED  VARCHAR(30),
  ROWS_DELETED  BIGINT DEFAULT 0,

  CONSTRAINT RDBM_PK   PRIMARY KEY (DATE_REMOVED)
);

GRANT SELECT, INSERT, UPDATE, DELETE ON RBA_RTE_DB_MAINTENANCE_META TO USER {{database.user}};

CREATE TABLE AUTH_TXN_OBL_DATA (
  TXN_ID          CHARACTER(16) FOR BIT DATA         NOT NULL,
  REC_TIME        TIMESTAMP     NOT NULL,
  OBLIGATION_URI  VARCHAR(200)  NOT NULL,
  REQUESTED_URL   VARCHAR(4000) NOT NULL,
  ACTION_ID       VARCHAR(200)  NOT NULL,

  CONSTRAINT TXID_PK  PRIMARY KEY (TXN_ID)
);

CREATE INDEX AUTX_REC_TIME ON AUTH_TXN_OBL_DATA(REC_TIME);

GRANT SELECT, INSERT, UPDATE, DELETE ON AUTH_TXN_OBL_DATA TO USER {{database.user}};

CREATE TABLE AUTH_TXN_OBL_PARAMETERS_DATA (
  TXN_ID                     CHARACTER(16) FOR BIT DATA         NOT NULL,
  OBLIGATION_PARAM_NAME      VARCHAR(200)  NOT NULL,
  OBLIGATION_PARAM_VALUE     VARCHAR(2000) NOT NULL,
  OBLIGATION_PARAM_DATATYPE  VARCHAR(200)  NOT NULL,

  CONSTRAINT TXPID_PK  PRIMARY KEY (TXN_ID, OBLIGATION_PARAM_NAME),
  CONSTRAINT TXOV_FK1 FOREIGN KEY (TXN_ID) REFERENCES AUTH_TXN_OBL_DATA(TXN_ID) ON DELETE CASCADE,
  CONSTRAINT PA_DATATYPE CHECK (OBLIGATION_PARAM_DATATYPE IN ('String', 'Double', 'Date', 'Time', 'Integer', 'X500Name', 'Boolean'))
);


GRANT SELECT, INSERT, UPDATE, DELETE ON AUTH_TXN_OBL_PARAMETERS_DATA TO USER {{database.user}};

CREATE TABLE AUTH_TXN_OBL_CTX_ATTRS_DATA (
  TXN_ID             CHARACTER(16) FOR BIT DATA        NOT NULL,
  CTX_ATTR_NAME      VARCHAR(200) NOT NULL,
  CTX_ATTR_URI       VARCHAR(200) NOT NULL,
  CTX_ATTR_ISSUER    VARCHAR(200),
  CTX_ATTR_DATATYPE  VARCHAR(200) NOT NULL,
  CTX_ATTR_VALUE_ID  CHARACTER(16) FOR BIT DATA        NOT NULL,

  CONSTRAINT TXAID_PK  PRIMARY KEY (TXN_ID, CTX_ATTR_NAME, CTX_ATTR_URI),
  CONSTRAINT TXOAV_FK1 FOREIGN KEY (TXN_ID) REFERENCES AUTH_TXN_OBL_DATA(TXN_ID) ON DELETE CASCADE,
  CONSTRAINT CA_DATATYPE CHECK (CTX_ATTR_DATATYPE IN ('String', 'Double', 'Date', 'Time', 'Integer', 'X500Name', 'Boolean')),
  CONSTRAINT VID_UK1 UNIQUE  (CTX_ATTR_VALUE_ID)
);


GRANT SELECT, INSERT, UPDATE, DELETE ON AUTH_TXN_OBL_CTX_ATTRS_DATA TO USER {{database.user}};

CREATE TABLE AUTH_TXN_OBL_CTX_ATTRS_DATA_V (
 CTX_ATTR_VALUE_ID  CHARACTER(16) FOR BIT DATA         NOT NULL,
 CTX_ATTR_VALUE     VARCHAR(2000) NOT NULL,

 CONSTRAINT TXUAV_FK1 FOREIGN KEY (CTX_ATTR_VALUE_ID) REFERENCES AUTH_TXN_OBL_CTX_ATTRS_DATA(CTX_ATTR_VALUE_ID) ON DELETE CASCADE
);

CREATE INDEX ATTRS_DATA_V_VALUE_ID ON AUTH_TXN_OBL_CTX_ATTRS_DATA_V(CTX_ATTR_VALUE_ID);

GRANT SELECT, INSERT, UPDATE, DELETE ON AUTH_TXN_OBL_CTX_ATTRS_DATA_V TO USER {{database.user}};

COMMIT;
-- End "/tmp/mountrootfs18009.wd6Dxa/opt/ibm/generic/defs/hvdb/rba_hvdb_schema.sql"

-- End "/tmp/mountrootfs18009.wd6Dxa/opt/ibm/generic/defs/hvdb/rba-hvdb.sql"
-- Start "/tmp/mountrootfs18009.wd6Dxa/opt/ibm/generic/defs/hvdb/fim-hvdb.sql"


-- Start "/tmp/mountrootfs18009.wd6Dxa/opt/ibm/generic/defs/hvdb/OIDC.sql"

-- If the OAuthDBSchema usage below fails then ensure that the user
-- you are using to run this SQL script has the previledge to create
-- a schema.
CREATE SCHEMA OAuthDBSchema;



CREATE TABLE OAuthDBSchema.IDAAS_OAUTH20CLIENT (
    ID VARCHAR(256) NOT NULL,
    TENANT_ID VARCHAR(256) NOT NULL,
    COMPONENTID VARCHAR(256) NOT NULL,
    CLIENTID VARCHAR(254) NOT NULL,

    PRIMARY KEY (ID),
    CONSTRAINT IDAAS_OAUTH20CLIENT_UK1
        UNIQUE (COMPONENTID, CLIENTID)
);

GRANT SELECT, INSERT, UPDATE, DELETE ON OAuthDBSchema.IDAAS_OAUTH20CLIENT TO USER {{database.user}};

COMMIT;



CREATE TABLE OAuthDBSchema.OAUTH20CACHE (
    LOOKUPKEY VARCHAR(256) NOT NULL,
    UNIQUEID VARCHAR(128) NOT NULL,
    COMPONENTID VARCHAR(256) NOT NULL,
    TYPE VARCHAR(64) NOT NULL,
    SUBTYPE VARCHAR(64),
    CREATEDAT BIGINT,
    LIFETIME INT,
    EXPIRES BIGINT,
    TOKENSTRING CLOB NOT NULL,
    CLIENTID VARCHAR(254) NOT NULL,
    USERNAME VARCHAR(1024) NOT NULL,
    SCOPE VARCHAR(512) NOT NULL,
    REDIRECTURI VARCHAR(2048),
    STATEID VARCHAR(64) NOT NULL,
    EXTENDEDFIELDS CLOB DEFAULT '{}' NOT NULL,

    PRIMARY KEY (LOOKUPKEY)
);

CREATE INDEX OAC_IX ON OAuthDBSchema.OAUTH20CACHE (EXPIRES ASC);

GRANT SELECT, INSERT, UPDATE, DELETE ON OAuthDBSchema.OAUTH20CACHE TO USER {{database.user}};



CREATE TABLE OAuthDBSchema.OAUTH20CLIENTCONFIG (
    COMPONENTID VARCHAR(256) NOT NULL,
    CLIENTID VARCHAR(254) NOT NULL,
    CLIENTSECRET VARCHAR(256),
    DISPLAYNAME VARCHAR(256) NOT NULL,
    REDIRECTURI VARCHAR(2048),
    ENABLED INT,
    CLIENTMETADATA CLOB DEFAULT '{}' NOT NULL,

    PRIMARY KEY (COMPONENTID, CLIENTID),
    CONSTRAINT OCC_FK1 FOREIGN KEY (COMPONENTID, CLIENTID) REFERENCES OAuthDBSchema.IDAAS_OAUTH20CLIENT(COMPONENTID, CLIENTID) ON DELETE CASCADE
);

GRANT SELECT, INSERT, UPDATE, DELETE ON OAuthDBSchema.OAUTH20CLIENTCONFIG TO USER {{database.user}};



CREATE TABLE OAuthDBSchema.OAUTH20CONSENTCACHE (
	CLIENTID VARCHAR(254) NOT NULL,  
	USERID VARCHAR(256) NOT NULL,
	PROVIDERID VARCHAR(256) NOT NULL,
	SCOPE VARCHAR(1024) NOT NULL,
	EXPIRES BIGINT,
	EXTENDEDFIELDS CLOB DEFAULT '{}' NOT NULL
);

GRANT SELECT, INSERT, UPDATE, DELETE ON OAuthDBSchema.OAUTH20CONSENTCACHE TO USER {{database.user}};



COMMIT;
-- End "/tmp/mountrootfs18009.wd6Dxa/opt/ibm/generic/defs/hvdb/OIDC.sql"
-- Start "/tmp/mountrootfs18009.wd6Dxa/opt/ibm/generic/defs/hvdb/DistributedMap.sql"

CREATE TABLE DMAP_ENTRIES (
    DMAP_KEY        VARCHAR(256) NOT NULL,
    DMAP_PARTITION  VARCHAR(256) NOT NULL,
    DMAP_VALUE      CLOB         NOT NULL,
    DMAP_EXPIRY     BIGINT ,
    PRIMARY KEY (DMAP_KEY, DMAP_PARTITION)
);

CREATE INDEX DMAP_EXPIRY_INDEX ON DMAP_ENTRIES(DMAP_EXPIRY);

GRANT SELECT, INSERT, UPDATE, DELETE ON DMAP_ENTRIES TO USER {{database.user}};

COMMIT;
-- End "/tmp/mountrootfs18009.wd6Dxa/opt/ibm/generic/defs/hvdb/DistributedMap.sql"
-- Start "/tmp/mountrootfs18009.wd6Dxa/opt/ibm/generic/defs/hvdb/OAuthCacheProvider.sql"

CREATE TABLE OAUTH20_TOKEN_CACHE (
       TOKEN_ID          VARCHAR(512)    NOT NULL CONSTRAINT PK_LOOKUPKEY PRIMARY KEY,
       TYPE              VARCHAR(64)     NOT NULL,
       SUB_TYPE          VARCHAR(64),
       DATE_CREATED      BIGINT,
       DATE_LAST_USED    BIGINT,
       LIFETIME          INT,
       TOKEN_STRING      VARCHAR(512)    NOT NULL,
       CLIENT_ID         VARCHAR(256)    NOT NULL,
       USERNAME          VARCHAR(256)    NOT NULL,
       SCOPE             VARCHAR(512)    NOT NULL,
       REDIRECT_URI      VARCHAR(256),
       STATE_ID          VARCHAR(64)     NOT NULL,
       TOKEN_ENABLED     CHAR            NOT NULL,
       PREV_TOKEN_STRING VARCHAR(512),
        CHECK (TOKEN_ENABLED IN ('Y', 'N'))
);

CREATE INDEX OAUTH20CACHE_ST        ON OAUTH20_TOKEN_CACHE      (STATE_ID ASC);
CREATE INDEX OAUTH20CACHE_TKSTRING  ON OAUTH20_TOKEN_CACHE      (TOKEN_STRING);
CREATE INDEX OAUTH20CACHE_LIFETIME  ON OAUTH20_TOKEN_CACHE      (LIFETIME ASC);
CREATE INDEX OAUTH20CACHE_UCID      ON OAUTH20_TOKEN_CACHE      (USERNAME, CLIENT_ID);

CREATE TABLE OAUTH_TRUSTED_CLIENT (
       TRUSTED_CLIENT_ID        VARCHAR(256) NOT NULL CONSTRAINT PK_UNIQUEID PRIMARY KEY,
       USERNAME                 VARCHAR(256) NOT NULL,
       CLIENT_ID                VARCHAR(256) NOT NULL
);

CREATE INDEX TRUSTEDCLIENTS_USERNAME            ON OAUTH_TRUSTED_CLIENT    (USERNAME);
CREATE INDEX TRUSTEDCLIENTS_USERNAMECLIENTID    ON OAUTH_TRUSTED_CLIENT    (USERNAME, CLIENT_ID);

CREATE TABLE OAUTH_SCOPE (
       TRUSTED_CLIENT_ID    VARCHAR(256) NOT NULL,
       SCOPE                VARCHAR(256) NOT NULL,

       CONSTRAINT PK_UNIQUEIDSCOPE PRIMARY KEY (TRUSTED_CLIENT_ID, SCOPE),
       FOREIGN KEY (TRUSTED_CLIENT_ID) REFERENCES OAUTH_TRUSTED_CLIENT(TRUSTED_CLIENT_ID) ON DELETE CASCADE
);


CREATE TABLE OAUTH20_TOKEN_EXTRA_ATTRIBUTE (
    STATE_ID    VARCHAR(256),
    ATTR_NAME   VARCHAR(256),
    ATTR_VALUE  VARCHAR(256),
    SENSITIVE   CHAR      DEFAULT 'N',
    READ_ONLY   CHAR      DEFAULT 'N',
     CHECK (SENSITIVE IN ('Y', 'N')),
     CHECK (READ_ONLY IN ('Y', 'N'))
);

CREATE INDEX EXTRAATTR_STATE_ID ON OAUTH20_TOKEN_EXTRA_ATTRIBUTE (STATE_ID ASC);
CREATE INDEX EXTRAATTR_NAME     ON OAUTH20_TOKEN_EXTRA_ATTRIBUTE (ATTR_NAME ASC);

GRANT SELECT, INSERT, UPDATE, DELETE ON OAUTH20_TOKEN_CACHE             TO USER {{database.user}};
GRANT SELECT, INSERT, UPDATE, DELETE ON OAUTH_TRUSTED_CLIENT            TO USER {{database.user}};
GRANT SELECT, INSERT, UPDATE, DELETE ON OAUTH_SCOPE                     TO USER {{database.user}};
GRANT SELECT, INSERT, UPDATE, DELETE ON OAUTH20_TOKEN_EXTRA_ATTRIBUTE   TO USER {{database.user}};

COMMIT;
-- End "/tmp/mountrootfs18009.wd6Dxa/opt/ibm/generic/defs/hvdb/OAuthCacheProvider.sql"
-- Start "/tmp/mountrootfs18009.wd6Dxa/opt/ibm/generic/defs/hvdb/UserInfoProvider.sql"


CREATE TABLE USER_ATTRIBUTES (
 USER_ID             VARCHAR(200) NOT NULL,
 ATTRIBUTE_NAME      VARCHAR(200) NOT NULL,
 ATTRIBUTE_NAMESPACE VARCHAR(200) NOT NULL,
 ATTRIBUTE_DATATYPE  VARCHAR(200) NOT NULL,
 VALUES_ID	     CHARACTER(16) FOR BIT DATA        NOT NULL,
 CONSTRAINT UA_PK PRIMARY KEY (USER_ID, ATTRIBUTE_NAME, ATTRIBUTE_NAMESPACE ),
 CONSTRAINT CHK_ATTRIBUTE_DATATYPE CHECK (ATTRIBUTE_DATATYPE IN ('String', 'Double', 'Password','Long', 'Date', 'Time', 'Integer', 'X500Name')),
 CONSTRAINT UA_UK1 UNIQUE  (VALUES_ID)
);

GRANT SELECT, INSERT, UPDATE, DELETE ON USER_ATTRIBUTES TO USER {{database.user}};

CREATE TABLE USER_ATTRIBUTES_VALUES (
 VALUES_ID   CHARACTER(16) FOR BIT DATA      NOT NULL,
 VALUE       VARCHAR(2000) NOT NULL,
 CONSTRAINT UAV_FK1 FOREIGN KEY (VALUES_ID) REFERENCES USER_ATTRIBUTES(VALUES_ID) ON DELETE CASCADE
);

GRANT SELECT, INSERT, UPDATE, DELETE ON USER_ATTRIBUTES_VALUES TO USER {{database.user}};

COMMIT;
-- End "/tmp/mountrootfs18009.wd6Dxa/opt/ibm/generic/defs/hvdb/UserInfoProvider.sql"
-- Start "/tmp/mountrootfs18009.wd6Dxa/opt/ibm/FIM/upgrade/database/generic/hvdb/isam_access_control_generic_update_201605015.sql"

CREATE TABLE AUTHENTICATORS (
       APP_INST_ID       VARCHAR(256)    NOT NULL,
       TENANT_ID         VARCHAR(256),
       USERNAME          VARCHAR(256)    NOT NULL,

       PRIMARY KEY (APP_INST_ID)
);

CREATE TABLE OAUTH_AUTHENTICATORS (
       APP_INST_ID       VARCHAR(256)   NOT NULL,
       STATE_ID          VARCHAR(64)    NOT NULL,

       PRIMARY KEY (APP_INST_ID),
       FOREIGN KEY (APP_INST_ID) REFERENCES AUTHENTICATORS(APP_INST_ID) ON DELETE CASCADE
);

CREATE TABLE REGISTERED_AUTH_METHODS (
       AUTH_METHOD_ID   VARCHAR(256)    NOT NULL,
       APP_INST_ID      VARCHAR(256)    NOT NULL,
       TYPE             VARCHAR(64)     NOT NULL,
       ENABLED          VARCHAR(64)     NOT NULL,

       PRIMARY KEY (AUTH_METHOD_ID),
       FOREIGN KEY (APP_INST_ID) REFERENCES AUTHENTICATORS(APP_INST_ID) ON DELETE CASCADE
);

CREATE TABLE CRYPTO_AUTH_METHODS (
       AUTH_METHOD_ID    VARCHAR(256)    NOT NULL,
       SUBTYPE           VARCHAR(64)     NOT NULL,
       ALGORITHM         VARCHAR(256)    NOT NULL,
       PUBLIC_KEY        CLOB            NOT NULL,
       KEY_HANDLE        VARCHAR(256),
       USE_COUNT         BIGINT,

       PRIMARY KEY (AUTH_METHOD_ID),
       FOREIGN KEY (AUTH_METHOD_ID) REFERENCES REGISTERED_AUTH_METHODS(AUTH_METHOD_ID) ON DELETE CASCADE
);

GRANT SELECT, INSERT, UPDATE, DELETE ON AUTHENTICATORS             TO USER {{database.user}};
GRANT SELECT, INSERT, UPDATE, DELETE ON OAUTH_AUTHENTICATORS       TO USER {{database.user}};
GRANT SELECT, INSERT, UPDATE, DELETE ON REGISTERED_AUTH_METHODS    TO USER {{database.user}};
GRANT SELECT, INSERT, UPDATE, DELETE ON CRYPTO_AUTH_METHODS        TO USER {{database.user}};

COMMIT;
-- End "/tmp/mountrootfs18009.wd6Dxa/opt/ibm/FIM/upgrade/database/generic/hvdb/isam_access_control_generic_update_201605015.sql"
-- Start "/tmp/mountrootfs18009.wd6Dxa/opt/ibm/FIM/upgrade/database/generic/hvdb/isam_access_control_generic_update_201606027.sql"

CREATE TABLE MMFA_AUTH_TXN_DATA (
  TXN_ID            VARCHAR(256)  NOT NULL,
  DATE_CREATED      TIMESTAMP     NOT NULL,
  DATE_LAST_USED    TIMESTAMP     NOT NULL,
  USERNAME          VARCHAR(256)  NOT NULL,
  AUTHN_POLICY_URI  VARCHAR(200)  NOT NULL,
  REQUESTED_URL     VARCHAR(4000) NOT NULL,
  ACTION_ID         VARCHAR(200)  NOT NULL,
  RESULT_STATE      VARCHAR(50)   NOT NULL,
  TENANT_ID         VARCHAR(200),
  

  CONSTRAINT MMFA_TXID_PK  PRIMARY KEY (TXN_ID),
  CONSTRAINT MMFA_RESULT_VALS CHECK (RESULT_STATE IN ('pending', 'success', 'fail', 'abort', 'canceled'))
);

CREATE INDEX MMFA_AUTX_CREATED_TIME ON MMFA_AUTH_TXN_DATA(DATE_CREATED);
CREATE INDEX MMFA_AUTX_LASTUSED_TIME ON MMFA_AUTH_TXN_DATA(DATE_LAST_USED);

GRANT SELECT, INSERT, UPDATE, DELETE ON MMFA_AUTH_TXN_DATA TO USER {{database.user}};

CREATE TABLE MMFA_AUTH_TXN_PARAMETERS_DATA (
  TXN_ID               VARCHAR(256)  NOT NULL,
  MMFA_PARAM_NAME      VARCHAR(200)  NOT NULL,
  MMFA_PARAM_VALUE     VARCHAR(2000) NOT NULL,
  MMFA_PARAM_DATATYPE  VARCHAR(200)  NOT NULL,

  CONSTRAINT MMFA_TXPID_PK  PRIMARY KEY (TXN_ID, MMFA_PARAM_NAME),
  CONSTRAINT MMFA_TXOV_FK1 FOREIGN KEY (TXN_ID) REFERENCES MMFA_AUTH_TXN_DATA(TXN_ID) ON DELETE CASCADE,
  CONSTRAINT MMFA_PA_DATATYPE CHECK (MMFA_PARAM_DATATYPE IN ('String', 'Double', 'Date', 'Time', 'Integer', 'X500Name', 'Boolean'))
);


GRANT SELECT, INSERT, UPDATE, DELETE ON MMFA_AUTH_TXN_PARAMETERS_DATA TO USER {{database.user}};

CREATE TABLE MMFA_AUTH_TXN_CTX_ATTRS_DATA (
  TXN_ID             VARCHAR(256) NOT NULL,
  CTX_ATTR_NAME      VARCHAR(200) NOT NULL,
  CTX_ATTR_URI       VARCHAR(200) NOT NULL,
  CTX_ATTR_ISSUER    VARCHAR(200),
  CTX_ATTR_DATATYPE  VARCHAR(200) NOT NULL,
  CTX_ATTR_VALUE_ID  VARCHAR(256) NOT NULL,

  CONSTRAINT MMFA_TXAID_PK  PRIMARY KEY (TXN_ID, CTX_ATTR_NAME, CTX_ATTR_URI),
  CONSTRAINT MMFA_TXOAV_FK1 FOREIGN KEY (TXN_ID) REFERENCES MMFA_AUTH_TXN_DATA(TXN_ID) ON DELETE CASCADE,
  CONSTRAINT MMFA_CA_DATATYPE CHECK (CTX_ATTR_DATATYPE IN ('String', 'Double', 'Date', 'Time', 'Integer', 'X500Name', 'Boolean')),
  CONSTRAINT MMFA_VID_UK1 UNIQUE  (CTX_ATTR_VALUE_ID)
);


GRANT SELECT, INSERT, UPDATE, DELETE ON MMFA_AUTH_TXN_CTX_ATTRS_DATA TO USER {{database.user}};

CREATE TABLE MMFA_AUTH_TXN_CTX_ATTRS_DATA_V (
 CTX_ATTR_VALUE_ID  VARCHAR(256)  NOT NULL,
 CTX_ATTR_VALUE     VARCHAR(2000) NOT NULL,

 CONSTRAINT MMFA_TXUAV_FK1 FOREIGN KEY (CTX_ATTR_VALUE_ID) REFERENCES MMFA_AUTH_TXN_CTX_ATTRS_DATA(CTX_ATTR_VALUE_ID) ON DELETE CASCADE
);

CREATE INDEX MMFA_ATTRS_DATA_V_VALUE_ID ON MMFA_AUTH_TXN_CTX_ATTRS_DATA_V(CTX_ATTR_VALUE_ID);

COMMIT;
-- End "/tmp/mountrootfs18009.wd6Dxa/opt/ibm/FIM/upgrade/database/generic/hvdb/isam_access_control_generic_update_201606027.sql"
-- Start "/tmp/mountrootfs18009.wd6Dxa/opt/ibm/FIM/upgrade/database/generic/hvdb/isam_access_control_generic_update_201703170.sql"

CREATE TABLE U2F_TOKENS (
       ID                VARCHAR(256)    NOT NULL,
       TENANT_ID         VARCHAR(256),
       USERNAME          VARCHAR(256)    NOT NULL,
       ENABLED           VARCHAR(64)     NOT NULL,
       PUBLIC_KEY        CLOB            NOT NULL,
       KEY_HANDLE        CLOB            NOT NULL,
       USAGE_COUNT       INT             NOT NULL,
       NAME              VARCHAR(256),
       APP_ID            VARCHAR(256)    NOT NULL,

       PRIMARY KEY (ID)
);

GRANT SELECT, INSERT, UPDATE, DELETE ON U2F_TOKENS TO USER {{database.user}};

COMMIT;
-- End "/tmp/mountrootfs18009.wd6Dxa/opt/ibm/FIM/upgrade/database/generic/hvdb/isam_access_control_generic_update_201703170.sql"
-- Start "/tmp/mountrootfs18009.wd6Dxa/opt/ibm/FIM/upgrade/database/generic/hvdb/isam_access_control_generic_update_201704050.sql"

CREATE INDEX AUTHENTICATOR_APP_INST_ID ON REGISTERED_AUTH_METHODS (APP_INST_ID);

COMMIT;
-- End "/tmp/mountrootfs18009.wd6Dxa/opt/ibm/FIM/upgrade/database/generic/hvdb/isam_access_control_generic_update_201704050.sql"
-- Start "/tmp/mountrootfs18009.wd6Dxa/opt/ibm/FIM/upgrade/database/generic/hvdb/isam_access_control_generic_update_201710200.sql"


-- End "/tmp/mountrootfs18009.wd6Dxa/opt/ibm/FIM/upgrade/database/generic/hvdb/isam_access_control_generic_update_201710200.sql"


-- Start "/tmp/mountrootfs18009.wd6Dxa/opt/ibm/generic/defs/hvdb/AliasService.sql"


CREATE TABLE ALIAS_SVC_ALIASUSERPARTNER (
    ALIAS     	VARCHAR(256) NOT NULL,
    USERID    	VARCHAR(256) NOT NULL,
    PARTNER   	VARCHAR(256) NOT NULL,
    ALIASTYPE 	VARCHAR(256) NOT NULL,
    DOMAIN      VARCHAR(256) NOT NULL,
    UUID        VARCHAR(256),
    PRIMARY KEY (ALIAS, USERID, PARTNER, ALIASTYPE, DOMAIN)
);

CREATE INDEX ALIAS_SVC_ALIAS_IX ON ALIAS_SVC_ALIASUSERPARTNER (ALIAS, PARTNER, ALIASTYPE, DOMAIN);
CREATE INDEX ALIAS_SVC_USERID_IX ON ALIAS_SVC_ALIASUSERPARTNER (USERID, PARTNER, ALIASTYPE, DOMAIN);

GRANT SELECT, INSERT, UPDATE, DELETE ON ALIAS_SVC_ALIASUSERPARTNER TO USER {{database.user}};

COMMIT;

-- End "/tmp/mountrootfs18009.wd6Dxa/opt/ibm/generic/defs/hvdb/AliasService.sql"

-- End "/tmp/mountrootfs18009.wd6Dxa/opt/ibm/generic/defs/hvdb/fim-hvdb.sql"
-- Start "/tmp/mountrootfs18009.wd6Dxa/opt/rtss/schema/generic/rtss-hvdb.sql"



-- End "/tmp/mountrootfs18009.wd6Dxa/opt/rtss/schema/generic/rtss-hvdb.sql"

DISCONNECT ALL;
DETACH;
-- End "/home/webseal/20171201-2325/app-core/modules/files/hvdb.sql"
